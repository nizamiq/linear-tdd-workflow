name: Code Assessment

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:
    inputs:
      scope:
        description: 'Assessment scope'
        required: false
        default: 'full'
        type: choice
        options:
          - full
          - incremental
      repository:
        description: 'Repository to assess'
        required: false
        default: 'current'

env:
  NODE_VERSION: '18'
  ASSESSMENT_TIMEOUT: 900  # 15 minutes

jobs:
  assess:
    name: Run Code Assessment
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run AUDITOR assessment
        id: assess
        run: |
          if [ "${{ github.event.inputs.scope }}" = "incremental" ]; then
            npm run assess:incremental
          else
            npm run assess
          fi
        env:
          LINEAR_API_KEY: ${{ secrets.LINEAR_API_KEY }}
          LINEAR_TEAM_ID: ${{ secrets.LINEAR_TEAM_ID }}
          ASSESSMENT_SCOPE: ${{ github.event.inputs.scope || 'full' }}

      - name: Parse assessment results
        id: parse
        run: |
          echo "issues=$(jq '.issues | length' assessment-report.json)" >> $GITHUB_OUTPUT
          echo "complexity=$(jq '.metrics.complexity' assessment-report.json)" >> $GITHUB_OUTPUT
          echo "coverage=$(jq '.metrics.coverage' assessment-report.json)" >> $GITHUB_OUTPUT

      - name: Create Linear tasks
        if: steps.parse.outputs.issues > 0
        run: npm run linear:create-issues
        env:
          LINEAR_API_KEY: ${{ secrets.LINEAR_API_KEY }}
          LINEAR_TEAM_ID: ${{ secrets.LINEAR_TEAM_ID }}
          LINEAR_PROJECT_ID: ${{ secrets.LINEAR_PROJECT_ID }}

      - name: Upload assessment report
        uses: actions/upload-artifact@v4
        with:
          name: assessment-report-${{ github.run_id }}
          path: |
            assessment-report.json
            assessment-summary.md
          retention-days: 30

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('assessment-summary.md', 'utf8');

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## 🔍 Code Assessment Report\n\n${summary}`
            });

      - name: Update metrics dashboard
        run: |
          curl -X POST ${{ secrets.METRICS_ENDPOINT }} \
            -H "Authorization: Bearer ${{ secrets.METRICS_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @assessment-report.json

      - name: Check quality gates
        id: quality
        run: |
          complexity="${{ steps.parse.outputs.complexity }}"
          coverage="${{ steps.parse.outputs.coverage }}"

          if (( $(echo "$complexity > 10" | bc -l) )); then
            echo "❌ Complexity threshold exceeded: $complexity > 10"
            exit 1
          fi

          if (( $(echo "$coverage < 80" | bc -l) )); then
            echo "⚠️ Coverage below target: $coverage < 80"
          fi

      - name: Notify Slack
        if: always()
        uses: slack-notify@v1
        with:
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          status: ${{ job.status }}
          text: |
            Code Assessment ${{ job.status == 'success' && 'completed' || 'failed' }}
            Issues Found: ${{ steps.parse.outputs.issues }}
            Complexity: ${{ steps.parse.outputs.complexity }}
            Coverage: ${{ steps.parse.outputs.coverage }}%