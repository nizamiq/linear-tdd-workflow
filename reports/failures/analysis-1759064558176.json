{
  "pipelineId": "latest",
  "failureType": "test_failure",
  "rootCause": {
    "summary": "Test suite execution failed",
    "category": "test_issues",
    "evidence": [
      "Test exit code non-zero"
    ],
    "recommendations": []
  },
  "analysisId": "analysis-1759064558176",
  "severity": "medium",
  "canAutoFix": false,
  "recommendedActions": [],
  "diagnostics": {
    "status": null,
    "logs": null,
    "metrics": {},
    "environment": {
      "nodeVersion": "v23.8.0",
      "platform": "darwin",
      "memory": {
        "rss": 50151424,
        "heapTotal": 10878976,
        "heapUsed": 6480184,
        "external": 1719277,
        "arrayBuffers": 82676
      },
      "uptime": 4.999059875
    },
    "lastRuns": [],
    "errors": [],
    "git": {
      "status": " M .claude/agents/strategist.md\n M .claude/cli.js\n M .claude/scripts/core/agent-command-router.js\n M .claude/scripts/core/agent-pool.js\n M .claude/scripts/core/concurrency-orchestrator.js\n M .claude/scripts/core/concurrency-tester.js\n M .claude/scripts/core/error-recovery-manager.js\n M .claude/scripts/core/mcp-concurrency-validator.js\n M .claude/scripts/core/mcp-queue-manager.js\n M .claude/scripts/core/performance-monitor.js\n M .claude/scripts/core/phase-b1-tester.js\n M .claude/scripts/core/real-mcp-tester.js\n M .claude/settings.local.json\n M package.json\n?? .claude/scripts/core/concurrency-orchestrator.js.bak\n?? .claude/scripts/core/concurrency-orchestrator.js.bak2\n?? .claude/scripts/core/concurrency-tester.js.bak\n?? .claude/scripts/core/concurrency-tester.js.bak2\n?? .claude/scripts/core/mcp-concurrency-validator.js.bak\n?? .claude/scripts/core/mcp-concurrency-validator.js.bak2\n?? .claude/scripts/core/mcp-queue-manager.js.bak\n?? .claude/scripts/core/mcp-queue-manager.js.bak2\n?? .claude/scripts/core/phase-b1-tester.js.bak\n?? .claude/scripts/core/phase-b1-tester.js.bak2\n?? .claude/scripts/core/real-mcp-tester.js.bak\n?? .claude/scripts/core/real-mcp-tester.js.bak2\n?? deployments/\n?? profiles/\n?? reports/\n?? security/\n?? src/auth.js\n?? tests/auth.test.js\n?? tests/fixtures/\n?? tests/mocks/\n?? tests/services/\n",
      "lastCommit": "a388215 feat: implement missing agent:invoke command pattern",
      "branch": "main"
    },
    "tests": {
      "status": "failing",
      "error": "Command failed: npm test -- --passWithNoTests\nFAIL tests/services/linear-service.test.ts\n  ‚óè Test suite failed to run\n\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m33\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'LinearClient'.\n\n    \u001b[7m33\u001b[0m   private client: LinearClient;\n    \u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m36\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'LinearClient'.\n\n    \u001b[7m36\u001b[0m     this.client = new LinearClient({ apiKey });\n    \u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'issueId' is declared but its value is never read.\n\n    \u001b[7m56\u001b[0m   async getIssue(issueId: string): Promise<Issue> {\n    \u001b[7m  \u001b[0m \u001b[91m                 ~~~~~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2355: \u001b[0mA function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n\n    \u001b[7m56\u001b[0m   async getIssue(issueId: string): Promise<Issue> {\n    \u001b[7m  \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m57\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7005: \u001b[0mVariable 'complexity' implicitly has an 'any' type.\n\n    \u001b[7m57\u001b[0m     const issue = await this.client complexity fix', () => {\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m57\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7005: \u001b[0mVariable 'fix' implicitly has an 'any' type.\n\n    \u001b[7m57\u001b[0m     const issue = await this.client complexity fix', () => {\n    \u001b[7m  \u001b[0m \u001b[91m                                               ~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m60\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'sdk'.\n\n    \u001b[7m60\u001b[0m       const result = sdk';\n    \u001b[7m  \u001b[0m \u001b[91m                     ~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m91\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'LinearClient'.\n\n    \u001b[7m91\u001b[0m   private client: LinearClient;\n    \u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m94\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'LinearClient'.\n\n    \u001b[7m94\u001b[0m     this.client = new LinearClient({ apiKey });\n    \u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m114\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'issueId' is declared but its value is never read.\n\n    \u001b[7m114\u001b[0m   async getIssue(issueId: string): Promise<Issue> {\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m114\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2355: \u001b[0mA function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n\n    \u001b[7m114\u001b[0m   async getIssue(issueId: string): Promise<Issue> {\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'issue' is declared but its value is never read.\n\n    \u001b[7m115\u001b[0m     const issue = await this.client({ input: 'test' });\n    \u001b[7m   \u001b[0m \u001b[91m          ~~~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m')' expected.\n\n    \u001b[7m2\u001b[0m   describe('sdk';\n    \u001b[7m \u001b[0m \u001b[91m                ~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m57\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m57\u001b[0m     const issue = await this.client complexity fix', () => {\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m57\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m57\u001b[0m     const issue = await this.client complexity fix', () => {\n    \u001b[7m  \u001b[0m \u001b[91m                                               ~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m57\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m57\u001b[0m     const issue = await this.client complexity fix', () => {\n    \u001b[7m  \u001b[0m \u001b[91m                                                  ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m57\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1002: \u001b[0mUnterminated string literal.\n\n    \u001b[7m57\u001b[0m     const issue = await this.client complexity fix', () => {\n    \u001b[7m  \u001b[0m \u001b[91m                                                            \u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m60\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m60\u001b[0m       const result = sdk';\n    \u001b[7m  \u001b[0m \u001b[91m                        ~~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m60\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1002: \u001b[0mUnterminated string literal.\n\n    \u001b[7m60\u001b[0m       const result = sdk';\n    \u001b[7m  \u001b[0m \u001b[91m                          \u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m6\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1068: \u001b[0mUnexpected token. A constructor, method, accessor, or property was expected.\n\n    \u001b[7m118\u001b[0m     });\n    \u001b[7m   \u001b[0m \u001b[91m     ~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m119\u001b[0m:\u001b[93m4\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1068: \u001b[0mUnexpected token. A constructor, method, accessor, or property was expected.\n\n    \u001b[7m119\u001b[0m   });\n    \u001b[7m   \u001b[0m \u001b[91m   ~\u001b[0m\n    \u001b[96mtests/services/linear-service.test.ts\u001b[0m:\u001b[93m119\u001b[0m:\u001b[93m6\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m'}' expected.\n\n    \u001b[7m119\u001b[0m   });\n    \u001b[7m   \u001b[0m \u001b[91m     \u001b[0m\n\nFAIL tests/services/calculator.test.ts\n  ‚óè Test suite failed to run\n\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m3\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'private'.\n\n    \u001b[7m3\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m \u001b[0m \u001b[91m  ~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m3\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'validateDivisor'.\n\n    \u001b[7m3\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m3\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 4.\n\n    \u001b[7m3\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m4\u001b[0m     if (divisor === 0) {\n    \u001b[7m \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m3\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'divisor'.\n\n    \u001b[7m3\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m \u001b[0m \u001b[91m                          ~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m3\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2693: \u001b[0m'number' only refers to a type, but is being used as a value here.\n\n    \u001b[7m3\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m \u001b[0m \u001b[91m                                   ~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'divisor' is declared but its value is never read.\n\n    \u001b[7m4\u001b[0m     if (divisor === 0) {\n    \u001b[7m \u001b[0m \u001b[91m        ~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'divisor' implicitly has an 'any' type.\n\n    \u001b[7m4\u001b[0m     if (divisor === 0) {\n    \u001b[7m \u001b[0m \u001b[91m        ~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'complexity'.\n\n    \u001b[7m8\u001b[0m } complexity fix', () => {\n    \u001b[7m \u001b[0m \u001b[91m  ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'fix'.\n\n    \u001b[7m8\u001b[0m } complexity fix', () => {\n    \u001b[7m \u001b[0m \u001b[91m             ~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m12\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'private'.\n\n    \u001b[7m12\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m  \u001b[0m \u001b[91m  ~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m12\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7005: \u001b[0mVariable 'validateDivisor' implicitly has an 'any' type.\n\n    \u001b[7m12\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m17\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ input: string; }' is not assignable to parameter of type 'number'.\n\n    \u001b[7m17\u001b[0m }({ input: 'test' });\n    \u001b[7m  \u001b[0m \u001b[91m  ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m18\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'result'.\n\n    \u001b[7m18\u001b[0m       expect(result).toBeDefined();\n    \u001b[7m  \u001b[0m \u001b[91m             ~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m19\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'result'.\n\n    \u001b[7m19\u001b[0m       expect(result).not.toBeNull();\n    \u001b[7m  \u001b[0m \u001b[91m             ~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1002: \u001b[0mUnterminated string literal.\n\n    \u001b[7m2\u001b[0m   describe('\n    \u001b[7m \u001b[0m \u001b[91m            \u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m3\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m3\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m \u001b[0m \u001b[91m  ~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m3\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m3\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m3\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m3\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m \u001b[0m \u001b[91m                                 ~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m3\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m3\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m \u001b[0m \u001b[91m                                          ~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m4\u001b[0m     if (divisor === 0) {\n    \u001b[7m \u001b[0m \u001b[91m                ~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m';' expected.\n\n    \u001b[7m4\u001b[0m     if (divisor === 0) {\n    \u001b[7m \u001b[0m \u001b[91m                       ~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\n\n    \u001b[7m7\u001b[0m   }\n    \u001b[7m \u001b[0m \u001b[91m  ~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\n\n    \u001b[7m8\u001b[0m } complexity fix', () => {\n    \u001b[7m \u001b[0m \u001b[91m~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\n\n    \u001b[7m8\u001b[0m } complexity fix', () => {\n    \u001b[7m \u001b[0m \u001b[91m  ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1434: \u001b[0mUnexpected keyword or identifier.\n\n    \u001b[7m8\u001b[0m } complexity fix', () => {\n    \u001b[7m \u001b[0m \u001b[91m             ~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1002: \u001b[0mUnterminated string literal.\n\n    \u001b[7m8\u001b[0m } complexity fix', () => {\n    \u001b[7m \u001b[0m \u001b[91m                          \u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m12\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m12\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m12\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m12\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m  \u001b[0m \u001b[91m                         ~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m12\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m'=>' expected.\n\n    \u001b[7m12\u001b[0m   private validateDivisor(divisor: number): void {\n    \u001b[7m  \u001b[0m \u001b[91m                                                 ~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m17\u001b[0m:\u001b[93m2\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m17\u001b[0m }({ input: 'test' });\n    \u001b[7m  \u001b[0m \u001b[91m ~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m17\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m')' expected.\n\n    \u001b[7m17\u001b[0m }({ input: 'test' });\n    \u001b[7m  \u001b[0m \u001b[91m                    ~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\n\n    \u001b[7m20\u001b[0m     });\n    \u001b[7m  \u001b[0m \u001b[91m    ~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m6\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\n\n    \u001b[7m20\u001b[0m     });\n    \u001b[7m  \u001b[0m \u001b[91m     ~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\n\n    \u001b[7m21\u001b[0m   });\n    \u001b[7m  \u001b[0m \u001b[91m  ~\u001b[0m\n    \u001b[96mtests/services/calculator.test.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m4\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\n\n    \u001b[7m21\u001b[0m   });\n    \u001b[7m  \u001b[0m \u001b[91m   ~\u001b[0m\n\nPASS tests/unit/calculator.test.ts\n  Calculator\n    add\n      ‚úì should add two positive numbers correctly (1 ms)\n      ‚úì should add negative numbers correctly\n      ‚úì should add zero correctly\n      ‚úì should handle decimal numbers (1 ms)\n    subtract\n      ‚úì should subtract two numbers correctly\n      ‚úì should handle negative results\n    multiply\n      ‚úì should multiply two numbers correctly\n      ‚úì should return zero when multiplying by zero\n      ‚úì should handle negative numbers\n    divide\n      ‚úì should divide two numbers correctly\n      ‚úì should throw error when dividing by zero (4 ms)\n      ‚úì should handle decimal results\n\nPASS tests/unit/linear-service.test.ts\n  LinearService\n    createIssue\n      ‚úì should create an issue successfully (8 ms)\n      ‚úì should handle errors when creating an issue (7 ms)\n      ‚úì should validate required fields (9 ms)\n    updateIssue\n      ‚úì should update an issue successfully (3 ms)\n    getIssue\n      ‚úì should retrieve an issue by ID (6 ms)\n      ‚úì should handle non-existent issues (4 ms)\n\nFAIL tests/auth.test.js\n  ‚óè Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     ‚Ä¢ If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     ‚Ä¢ If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     ‚Ä¢ To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     ‚Ä¢ If you need a custom transformation specify a \"transform\" option in your config.\n     ‚Ä¢ If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /Users/cnross/code/linear-tdd-workflow/tests/auth.test.js:2\n      describe(' Minimal implementation\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid or unexpected token\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)\n\nTest Suites: 3 failed, 2 passed, 5 total\nTests:       18 passed, 18 total\nSnapshots:   0 total\nTime:        1.224 s\nRan all test suites.\n",
      "output": "\n> linear-tdd-workflow@1.3.0 test\n> jest --coverage --verbose && python scripts/python-test-runner.py test --passWithNoTests\n\n----------|---------|----------|---------|---------|-------------------\nFile      | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s \n----------|---------|----------|---------|---------|-------------------\nAll files |       0 |        0 |       0 |       0 |                   \n----------|---------|----------|---------|---------|-------------------\n"
    },
    "lint": {
      "status": "failing",
      "error": "Command failed: npm run lint:check",
      "output": "\n> linear-tdd-workflow@1.3.0 lint:check\n> eslint . --ext .js,.ts\n\n\n/Users/cnross/code/linear-tdd-workflow/src/auth.js\n  7:1  error  Missing return type on function  @typescript-eslint/explicit-function-return-type\n\n/Users/cnross/code/linear-tdd-workflow/tests/auth.test.js\n  2:35  error  Parsing error: Unterminated string literal\n\n/Users/cnross/code/linear-tdd-workflow/tests/fixtures/mock-helpers.js\n   2:18  error  Require statement not part of import statement  @typescript-eslint/no-var-requires\n   5:3   error  Missing return type on function                 @typescript-eslint/explicit-function-return-type\n   9:3   error  Missing return type on function                 @typescript-eslint/explicit-function-return-type\n  13:3   error  Missing return type on function                 @typescript-eslint/explicit-function-return-type\n\n/Users/cnross/code/linear-tdd-workflow/tests/mocks/api.builder.js\n   2:17  error  Require statement not part of import statement  @typescript-eslint/no-var-requires\n   9:3   error  Missing return type on function                 @typescript-eslint/explicit-function-return-type\n  14:3   error  Missing return type on function                 @typescript-eslint/explicit-function-return-type\n  19:3   error  Missing return type on function                 @typescript-eslint/explicit-function-return-type\n  25:3   error  Missing return type on function                 @typescript-eslint/explicit-function-return-type\n\n/Users/cnross/code/linear-tdd-workflow/tests/mocks/api.mock.js\n  31:3  error  Missing return type on function  @typescript-eslint/explicit-function-return-type\n  36:3  error  Missing return type on function  @typescript-eslint/explicit-function-return-type\n  41:3  error  Missing return type on function  @typescript-eslint/explicit-function-return-type\n  46:3  error  Missing return type on function  @typescript-eslint/explicit-function-return-type\n  51:3  error  Missing return type on function  @typescript-eslint/explicit-function-return-type\n  55:3  error  Missing return type on function  @typescript-eslint/explicit-function-return-type\n  59:3  error  Missing return type on function  @typescript-eslint/explicit-function-return-type\n\n/Users/cnross/code/linear-tdd-workflow/tests/mocks/setup.js\n  16:56  error  Missing return type on function  @typescript-eslint/explicit-function-return-type\n  23:43  error  Missing return type on function  @typescript-eslint/explicit-function-return-type\n  27:49  error  Missing return type on function  @typescript-eslint/explicit-function-return-type\n\n/Users/cnross/code/linear-tdd-workflow/tests/services/calculator.test.ts\n  2:12  error  Parsing error: Unterminated string literal\n\n/Users/cnross/code/linear-tdd-workflow/tests/services/linear-service.test.ts\n  2:16  error  Parsing error: ')' expected\n\n‚úñ 23 problems (23 errors, 0 warnings)\n\n"
    },
    "dependencies": {
      "vulnerabilities": 0,
      "status": "clean"
    }
  },
  "success": false,
  "escalationReason": "Code or logic errors require human intervention"
}